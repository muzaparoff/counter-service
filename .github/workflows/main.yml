name: Build, Deploy, and Run Docker Image

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  build-deploy-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine New Version
        id: bump_version
        run: |
          base_tag="0.0.1"
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "$base_tag")
          if [[ "$latest_tag" == "$base_tag" ]]; then
            new_version="$base_tag"
          else
            IFS='.' read -ra version_parts <<< "$latest_tag"
            major="${version_parts[0]}"
            minor="${version_parts[1]}"
            patch="${version_parts[2]}"
            new_minor=$((minor + 1))
            new_version="$major.$new_minor.0"
          fi
          echo "::set-output name=new_version::$new_version"
        shell: bash

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          new_version=${{ steps.bump_version.outputs.new_version }}
          docker build -t muzaparoff/counter-service:$new_version .
        env:
          DOCKER_BUILDKIT: 1  # Enable BuildKit for improved caching

      - name: Push Docker image to Docker Hub
        run: |
          new_version=${{ steps.bump_version.outputs.new_version }}
          docker push muzaparoff/counter-service:$new_version

      - name: Create Git Tag
        run: |
          new_version=${{ steps.bump_version.outputs.new_version }}
          git tag $new_version
          git push origin $new_version

      - name: Deploy and Run on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            new_version=${{ steps.bump_version.outputs.new_version }}
            docker pull muzaparoff/counter-service:$new_version
            docker run -d --restart=always -p 80:80 muzaparoff/counter-service:$new_version
